# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BSDv3 License
# This file is distributed under the same license as the py4web package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: py4web 1.20240602.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-08 18:37-0700\n"
"PO-Revision-Date: 2024-06-09 00:04-0700\n"
"Last-Translator: \n"
"Language-Team: it <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.15.0\n"
"X-Generator: Poedit 3.4.4\n"

#: ../../chapter-09.rst:3
msgid "YATL Template Language"
msgstr "Linguaggio dei modelli YATL"

#: ../../chapter-09.rst:5
msgid ""
"py4web uses two distinct template languages for rendering dynamic HTML pages "
"that contain Python code:"
msgstr ""
"py4web utilizza due linguaggi di template distinti per il rendering di pagine "
"HTML dinamiche che contengono codice Python:"

#: ../../chapter-09.rst:7
msgid ""
"`yatl (Yet Another Template Language) <https://pypi.org/project/yatl/>`__ , "
"which is considered the original reference implementation"
msgstr ""
"'yatl (Yet Another Template Language) <https://pypi.org/project/yatl/>'__ , che "
"è considerata l'implementazione di riferimento originale"

#: ../../chapter-09.rst:8
msgid ""
"`Renoir <https://pypi.org/project/renoir/>`__, which is a newer and faster "
"implementation of yatl with additional functionality"
msgstr ""
"'Renoir <https://pypi.org/project/renoir/>'__, che è un'implementazione più "
"recente e veloce di yatl con funzionalità aggiuntive"

#: ../../chapter-09.rst:11
msgid ""
"Since ``Renoir`` does not include HTML helpers (see next chapter), py4web by "
"default uses the ``Renoir`` module for rendering templates and the ``yatl`` "
"module for helpers, plus some minor trickery to make them work together "
"seamlessly."
msgstr ""
"Dal momento che ''Renoir'' non include gli helper HTML (vedi il prossimo "
"capitolo), py4web di default usa il modulo ''Renoir'' per il rendering dei "
"template e il modulo ''yatl'' per gli helper, più alcuni piccoli trucchi per "
"farli funzionare insieme senza problemi."

#: ../../chapter-09.rst:14
msgid ""
"py4web also uses double square brackets ``[[ ... ]]`` to escape Python code "
"embedded in HTML, unless specified otherwise."
msgstr ""
"py4web usa anche le doppie parentesi quadre ''[[ ... ]] '' per eseguire "
"l'escape del codice Python incorporato in HTML, se non diversamente specificato."

#: ../../chapter-09.rst:16
msgid ""
"The advantage of using square brackets instead of angle brackets is that it’s "
"transparent to all common HTML editors. This allows the developer to use those "
"editors to create py4web templates."
msgstr ""
"Il vantaggio di utilizzare le parentesi quadre invece delle parentesi angolari "
"è che è trasparente a tutti gli editor HTML comuni. Ciò consente allo "
"sviluppatore di utilizzare tali editor per creare modelli py4web."

#: ../../chapter-09.rst:21
msgid ""
"Be careful not to mix Python code square brackets with other square brackets! "
"For example, you'll soon see syntax like this:"
msgstr ""
"Fai attenzione a non mischiare le parentesi quadre del codice Python con altre "
"parentesi quadre! Ad esempio, vedrai presto una sintassi come questa:"

#: ../../chapter-09.rst:30
msgid ""
"It's mandatory to add a space after the first closed bracket for separating the "
"list from the Python code square brackets."
msgstr ""
"È obbligatorio aggiungere uno spazio dopo la prima parentesi chiusa per "
"separare l'elenco dalle parentesi quadre del codice Python."

#: ../../chapter-09.rst:33
msgid ""
"Since the developer is embedding Python code into HTML, the document should be "
"indented according to HTML rules, and not Python rules. Therefore, we allow un-"
"indented Python inside the ``[[ ... ]]`` tags. But since Python normally uses "
"indentation to delimit blocks of code, we need a different way to delimit them; "
"this is why the py4web template language makes use of the Python keyword "
"``pass``."
msgstr ""
"Poiché lo sviluppatore incorpora il codice Python in HTML, il documento deve "
"essere rientrato in base alle regole HTML e non alle regole Python. Pertanto, "
"permettiamo Python non indentato all'interno del ''[[ ... ]] ''. Ma poiché "
"Python normalmente usa l'indentazione per delimitare i blocchi di codice, "
"abbiamo bisogno di un modo diverso per delimitarli; questo è il motivo per cui "
"il linguaggio dei template py4web fa uso della parola chiave Python ''pass''."

#: ../../chapter-09.rst:40
msgid ""
"A **code block** starts with a line ending with a colon and ends with a line "
"beginning with ``pass``. The keyword ``pass`` is not necessary when the end of "
"the block is obvious from the context."
msgstr ""
"Un **blocco di codice** inizia con una riga che termina con i due punti e "
"termina con una riga che inizia con ''pass''. La parola chiave ''pass'' non è "
"necessaria quando la fine del blocco è ovvia dal contesto."

#: ../../chapter-09.rst:44
msgid "Here is an example:"
msgstr "Ecco un esempio:"

#: ../../chapter-09.rst:56
msgid ""
"Note that ``pass`` is a Python keyword, not a py4web keyword. Some Python "
"editors, such as Emacs, use the keyword ``pass`` to signify the division of "
"blocks and use it to re-indent code automatically."
msgstr ""
"Si noti che ''pass'' è una parola chiave Python, non una parola chiave py4web. "
"Alcuni editor Python, come Emacs, usano la parola chiave ''pass'' per indicare "
"la divisione dei blocchi e la usano per re-indentare automaticamente il codice."

#: ../../chapter-09.rst:60
msgid ""
"The py4web template language does exactly the same. When it finds something "
"like:"
msgstr ""
"Il linguaggio dei template py4web fa esattamente la stessa cosa. Quando trova "
"qualcosa come:"

#: ../../chapter-09.rst:69
msgid "it translates it into a program:"
msgstr "lo traduce in un programma:"

#: ../../chapter-09.rst:79
msgid "``response.write`` writes to the response body."
msgstr "''response.write'' scrive nel corpo della risposta."

#: ../../chapter-09.rst:81
msgid ""
"When there is an error in a py4web template, the error report shows the "
"generated template code, not the actual template as written by the developer. "
"This helps the developer debug the code by highlighting the actual code that is "
"executed (which is something that can be debugged with an HTML editor or the "
"DOM inspector of the browser)."
msgstr ""
"Quando si verifica un errore in un modello py4web, il report degli errori "
"mostra il codice del modello generato, non il modello effettivo scritto dallo "
"sviluppatore. Questo aiuta lo sviluppatore a eseguire il debug del codice "
"evidenziando il codice effettivo che viene eseguito (che è qualcosa che può "
"essere sottoposto a debug con un editor HTML o l'ispettore DOM del browser)."

#: ../../chapter-09.rst:87
msgid "Also note that:"
msgstr "Si noti inoltre che:"

#: ../../chapter-09.rst:93
msgid "generates"
msgstr "Genera"

#: ../../chapter-09.rst:99
msgid ""
"Variables injected into the HTML in this way are escaped by default. The "
"escaping is ignored if ``x`` is an ``XML`` object, even if escape is set to "
"``True`` (see :ref:`XML` later for details)."
msgstr ""
"Le variabili inserite nell'HTML in questo modo vengono precedute da caratteri "
"di escape. L'escape viene ignorato se ''x'' è un oggetto ''XML'', anche se "
"l'escape è impostato a ''True'' (vedere :ref:'XML' più avanti per i dettagli)."

#: ../../chapter-09.rst:103
msgid "Here is an example that introduces the ``H1`` helper:"
msgstr "Di seguito è riportato un esempio che introduce l'helper ''H1'':"

#: ../../chapter-09.rst:109
msgid "which is translated to:"
msgstr "che si traduce in:"

#: ../../chapter-09.rst:115
msgid ""
"upon evaluation, the ``H1`` object and its components are recursively "
"serialized, escaped and written to the response body. The tags generated by "
"``H1`` and inner HTML are not escaped. This mechanism guarantees that all text "
"— and only text — displayed on the web page is always escaped, thus preventing "
"XSS vulnerabilities. At the same time, the code is simple and easy to debug."
msgstr ""
"al momento della valutazione, l'oggetto ''H1'' e i suoi componenti vengono "
"serializzati in modo ricorsivo, preceduti da caratteri di escape e scritti nel "
"corpo della risposta. I tag generati da ''H1'' e dall'HTML interno non sono "
"preceduti da caratteri di escape. Questo meccanismo garantisce che tutto il "
"testo, e solo il testo, visualizzato nella pagina Web venga sempre preceduto da "
"un carattere di escape, prevenendo così le vulnerabilità XSS. Allo stesso "
"tempo, il codice è semplice e facile da debuggare."

#: ../../chapter-09.rst:122
msgid ""
"The method ``response.write(obj, escape=True)`` takes two arguments, the object "
"to be written and whether it has to be escaped (set to ``True`` by default). If "
"``obj`` has an ``.xml()`` method, it is called and the result written to the "
"response body (the ``escape`` argument is ignored). Otherwise it uses the "
"object’s ``__str__`` method to serialize it and, if the escape argument is "
"``True``, escapes it. All built-in helper objects (``H1`` in the example) are "
"objects that know how to serialize themselves via the ``.xml()`` method."
msgstr ""
"Il metodo ''response.write(obj, escape=True)'' accetta due argomenti, l'oggetto "
"da scrivere e se deve essere preceduto da un escape (impostato a ''True'' per "
"impostazione predefinita). Se ''obj'' ha un metodo ''.xml()'', viene chiamato e "
"il risultato viene scritto nel corpo della risposta (l'argomento ''escape'' "
"viene ignorato). Altrimenti usa il metodo ''__str__'' dell'oggetto per "
"serializzarlo e, se l'argomento di escape è ''True'', ne esegue l'escape. Tutti "
"gli oggetti helper incorporati (''H1'' nell'esempio) sono oggetti che sanno "
"come serializzarsi tramite il metodo ''.xml()''."

#: ../../chapter-09.rst:131
msgid "This is all done transparently."
msgstr "Tutto questo viene fatto in modo trasparente."

#: ../../chapter-09.rst:135
msgid ""
"While the response object used inside the controllers is a full ``bottle."
"response`` object, inside the yatl templates it is replaced by a dummy object "
"(``yatl.template.DummyResponse``). This object is quite different, and much "
"simpler: it only has a write method! Also, you never need to (and never should) "
"call the ``response.write`` method explicitly."
msgstr ""
"Mentre l'oggetto response usato all'interno dei controller è un oggetto "
"''bottle.response'' completo, all'interno dei template yatl è sostituito da un "
"oggetto fittizio (''yatl.template.DummyResponse''). Questo oggetto è molto "
"diverso, e molto più semplice: ha solo un metodo di scrittura! Inoltre, non è "
"mai necessario (e non si dovrebbe) chiamare il metodo ''response.write'' in "
"modo esplicito."

#: ../../chapter-09.rst:144
msgid "Basic syntax"
msgstr "Sintassi di base"

#: ../../chapter-09.rst:146
msgid ""
"The py4web template language supports all Python control structures. Here we "
"provide some examples of each of them. They can be nested according to usual "
"programming practice. You can easily test them by copying the _scaffold app "
"(see :ref:`copying-the-scaffold-app`) and then editing the file ``new_app/"
"template/index.html``."
msgstr ""
"Il linguaggio modello py4web supporta tutte le strutture di controllo Python. "
"Di seguito forniamo alcuni esempi di ciascuno di essi. Possono essere "
"nidificati secondo la consueta pratica di programmazione. Puoi facilmente "
"testarli copiando l'app _scaffold (vedi :ref:'copying-the-scaffold-app') e poi "
"modificando il file ''new_app/template/index.html''."

#: ../../chapter-09.rst:154
msgid "``for...in``"
msgstr "''Per... dentro''"

#: ../../chapter-09.rst:156
msgid "In templates you can loop over any iterable object:"
msgstr "Nei modelli è possibile eseguire il ciclo su qualsiasi oggetto iterabile:"

#: ../../chapter-09.rst:165 ../../chapter-09.rst:191 ../../chapter-09.rst:217
msgid "which produces:"
msgstr "che produce:"

#: ../../chapter-09.rst:175
msgid ""
"Here ``items`` is any iterable object such as a Python list, Python tuple, or "
"Rows object, or any object that is implemented as an iterator. The elements "
"displayed are first serialized and escaped."
msgstr ""
"Qui ''items'' è qualsiasi oggetto iterabile come una lista Python, una tupla "
"Python o un oggetto Rows, o qualsiasi oggetto che viene implementato come "
"iteratore. Gli elementi visualizzati vengono prima serializzati e preceduti da "
"caratteri di escape."

#: ../../chapter-09.rst:180
msgid "``while``"
msgstr "''mentre''"

#: ../../chapter-09.rst:182
msgid "You can create a loop using the while keyword:"
msgstr "È possibile creare un ciclo utilizzando la parola chiave while:"

#: ../../chapter-09.rst:202
msgid "``if...elif...else``"
msgstr "''Se... elif... altro''"

#: ../../chapter-09.rst:204
msgid "You can use conditional clauses:"
msgstr "È possibile utilizzare le clausole condizionali:"

#: ../../chapter-09.rst:225
msgid ""
"Since it is obvious that ``else`` closes the first ``if`` block, there is no "
"need for a ``pass`` statement, and using one would be incorrect. However, you "
"must explicitly close the ``else`` block with a ``pass``."
msgstr ""
"Dal momento che è ovvio che ''else'' chiude il primo blocco ''if'', non c'è "
"bisogno di un'istruzione ''pass'', e usarne una non sarebbe corretto. Tuttavia, "
"è necessario chiudere esplicitamente il blocco ''else'' con un ''pass''."

#: ../../chapter-09.rst:229
msgid ""
"Recall that in Python “else if” is written ``elif`` as in the following example:"
msgstr ""
"Ricordiamo che in Python \"else if\" si scrive ''elif'' come nell'esempio "
"seguente:"

#: ../../chapter-09.rst:246
msgid "It produces:"
msgstr "Produce:"

#: ../../chapter-09.rst:255
msgid "``try...except...else...finally``"
msgstr "''Provate... eccetto... altro... finalmente''"

#: ../../chapter-09.rst:257
msgid ""
"It is also possible to use ``try...except`` statements in templates with one "
"caveat. Consider the following example:"
msgstr ""
"E' anche possibile utilizzare ''prova... tranne'' le dichiarazioni nei modelli "
"con un avvertimento. Si consideri l'esempio seguente:"

#: ../../chapter-09.rst:272
msgid "It will produce the following output:"
msgstr "Produrrà il seguente output:"

#: ../../chapter-09.rst:279
msgid ""
"This example illustrates that all output generated before an exception occurs "
"is rendered (including output that preceded the exception) inside the try "
"block. “Hello” is written because it precedes the exception."
msgstr ""
"In questo esempio viene illustrato che viene eseguito il rendering di tutto "
"l'output generato prima che si verifichi un'eccezione (incluso l'output che ha "
"preceduto l'eccezione) all'interno del blocco try. \"Hello\" si scrive perché "
"precede l'eccezione."

#: ../../chapter-09.rst:284
msgid "``def...return``"
msgstr "''Def... ritorno''"

#: ../../chapter-09.rst:286
msgid ""
"The py4web template language allows the developer to define and implement "
"functions that can return any Python object or a text/html string. Here we "
"consider two examples:"
msgstr ""
"Il linguaggio dei template py4web consente allo sviluppatore di definire e "
"implementare funzioni in grado di restituire qualsiasi oggetto Python o una "
"stringa text/html. Consideriamo qui due esempi:"

#: ../../chapter-09.rst:297
msgid "produces the following output:"
msgstr "produce il seguente output:"

#: ../../chapter-09.rst:305
msgid ""
"The function ``itemize1`` returns a helper object that is inserted at the "
"location where the function is called."
msgstr ""
"La funzione ''itemize1'' restituisce un oggetto helper che viene inserito nella "
"posizione in cui viene chiamata la funzione."

#: ../../chapter-09.rst:308
msgid "Consider now the following code:"
msgstr "Si consideri ora il codice seguente:"

#: ../../chapter-09.rst:319
msgid ""
"It produces exactly the same output as above. In this case, the function "
"``itemize2`` represents a piece of HTML that is going to replace the py4web tag "
"where the function is called. Notice that there is no ‘=’ in front of the call "
"to ``itemize2``, since the function does not return the text, but it writes it "
"directly into the response."
msgstr ""
"Produce esattamente lo stesso output di cui sopra. In questo caso, la funzione "
"''itemize2'' rappresenta un pezzo di HTML che sostituirà il tag py4web dove "
"viene chiamata la funzione. Si noti che non c'è '=' davanti alla chiamata a "
"''itemize2'', poiché la funzione non restituisce il testo, ma lo scrive "
"direttamente nella risposta."

#: ../../chapter-09.rst:325
msgid ""
"There is one caveat: functions defined inside a template must terminate with a "
"``return`` statement, or the automatic indentation will fail."
msgstr ""
"C'è un avvertimento: le funzioni definite all'interno di un modello devono "
"terminare con un'istruzione ''return'', altrimenti l'indentazione automatica "
"fallirà."

#: ../../chapter-09.rst:329
msgid "Information workflow"
msgstr "Flusso di lavoro delle informazioni"

#: ../../chapter-09.rst:331
msgid ""
"For dynamically modifying the workflow of the information there are custom "
"commands available: ``extend``, ``include``, ``block`` and ``super``. Note that "
"they are special template directives, not Python commands."
msgstr ""
"Per modificare dinamicamente il flusso di lavoro delle informazioni sono "
"disponibili comandi personalizzati: ''extend'', ''include'', ''block'' e "
"''super''. Si noti che si tratta di direttive speciali del modello, non di "
"comandi Python."

#: ../../chapter-09.rst:335
msgid "In addition, you can use normal Python functions inside templates."
msgstr ""
"Inoltre, è possibile utilizzare le normali funzioni Python all'interno dei "
"modelli."

#: ../../chapter-09.rst:339
msgid "``extend`` and ``include``"
msgstr "''estendi'' e ''includi''"

#: ../../chapter-09.rst:341
msgid "Templates can extend and include other templates in a tree-like structure."
msgstr ""
"I modelli possono estendere e includere altri modelli in una struttura ad "
"albero."

#: ../../chapter-09.rst:343
msgid ""
"For example, we can think of a template “index.html” that extends “layout.html” "
"and includes “body.html”. At the same time, “layout.html” may include “header."
"html” and “footer.html”."
msgstr ""
"Ad esempio, possiamo pensare a un modello \"index.html\" che estende \"layout."
"html\" e include \"body.html\". Allo stesso tempo, \"layout.html\" può "
"includere \"header.html\" e \"footer.html\"."

#: ../../chapter-09.rst:347
msgid ""
"The root of the tree is what we call a **layout template**. Just like any other "
"HTML template file, you can edit it from the command line or using the py4web "
"Dashboard. The file name “layout.html” is just a convention."
msgstr ""
"La radice dell'albero è ciò che chiamiamo un **modello di layout**. Proprio "
"come qualsiasi altro file modello HTML, puoi modificarlo dalla riga di comando "
"o utilizzando la dashboard di py4web. Il nome del file \"layout.html\" è solo "
"una convenzione."

#: ../../chapter-09.rst:351
msgid ""
"Here is a minimalist page that extends the “layout.html” template and includes "
"the “page.html” template:"
msgstr ""
"Ecco una pagina minimalista che estende il modello \"layout.html\" e include il "
"modello \"page.html\":"

#: ../../chapter-09.rst:361
msgid ""
"The extended layout file must contain an ``[[include]]`` directive, something "
"like:"
msgstr ""
"Il file di layout esteso deve contenere una direttiva ''[[include]]'', qualcosa "
"del tipo:"

#: ../../chapter-09.rst:376
msgid ""
"When the template is called, the extended (layout) template is loaded, and the "
"calling template replaces the ``[[include]]`` directive inside the layout. If "
"you don't write the ``[[include]]`` directive inside the layout, then it will "
"be included at the beginning of the file. Also, if you use multiple "
"``[[extend]]`` directives only the last one will be processed. Processing "
"continues recursively until all ``extend`` and ``include`` directives have been "
"processed. The resulting template is then translated into Python code."
msgstr ""
"Quando il template viene chiamato, viene caricato il template esteso (layout) e "
"il template chiamante sostituisce la direttiva ''[[include]]'' all'interno del "
"layout. Se non si scrive la direttiva ''[[include]]'' all'interno del layout, "
"allora sarà inclusa all'inizio del file. Inoltre, se si usano più direttive "
"''[[extend]]'' verrà elaborata solo l'ultima. L'elaborazione continua in modo "
"ricorsivo fino a quando tutte le direttive ''extend'' e ''include'' sono state "
"elaborate. Il modello risultante viene quindi tradotto in codice Python."

#: ../../chapter-09.rst:385
msgid ""
"Note, when an application is bytecode compiled, it is this Python code that is "
"compiled, not the original template files themselves. So, the bytecode compiled "
"version of a given template is a single .pyc file that includes the Python code "
"not just for the original template file, but for its entire tree of extended "
"and included templates."
msgstr ""
"Si noti che quando un'applicazione viene compilata con bytecode, viene "
"compilato questo codice Python, non i file di modello originali. Quindi, la "
"versione compilata in bytecode di un dato modello è un singolo file .pyc che "
"include il codice Python non solo per il file modello originale, ma per "
"l'intero albero di modelli estesi e inclusi."

#: ../../chapter-09.rst:391
msgid ""
"Any content or code that **precedes** the ``[[extend ...]]`` directive will be "
"inserted (and therefore executed) before the beginning of the extended "
"template's content/code. Although this is not typically used to insert actual "
"HTML content before the extended template's content, it can be useful as a "
"means to define variables or functions that you want to make available to the "
"extended template. For example, consider a template “index.html”:"
msgstr ""
"Qualsiasi contenuto o codice che **precede** il ''[[extend ...]] '' verrà "
"inserita (e quindi eseguita) prima dell'inizio del contenuto/codice del "
"template esteso. Sebbene non venga in genere utilizzato per inserire il "
"contenuto HTML effettivo prima del contenuto del modello esteso, può essere "
"utile come mezzo per definire le variabili o le funzioni che si desidera "
"rendere disponibili per il modello esteso. Si consideri, ad esempio, un modello "
"\"index.html\":"

#: ../../chapter-09.rst:406
msgid "and an excerpt from “layout.html”:"
msgstr "e un estratto da \"layout.html\":"

#: ../../chapter-09.rst:418
msgid ""
"Because the ``sidebar_enabled`` assignment in “index.html” comes before the "
"``extend``, that line gets inserted before the beginning of “layout.html”, "
"making ``sidebar_enabled`` available anywhere within the “layout.html” code."
msgstr ""
"Poiché l'assegnazione ''sidebar_enabled'' in \"index.html\" viene prima di "
"''extend'', quella riga viene inserita prima dell'inizio di \"layout.html\", "
"rendendo ''sidebar_enabled'' disponibile ovunque all'interno del codice "
"\"layout.html\"."

#: ../../chapter-09.rst:423
msgid ""
"It is also worth pointing out that the variables returned by the controller "
"function are available not only in the function’s main template, but in all of "
"its extended and included templates as well."
msgstr ""
"Vale anche la pena sottolineare che le variabili restituite dalla funzione "
"controller sono disponibili non solo nel modello principale della funzione, ma "
"anche in tutti i suoi modelli estesi e inclusi."

#: ../../chapter-09.rst:428
msgid "Extending using variables"
msgstr "Estensione tramite variabili"

#: ../../chapter-09.rst:430
msgid ""
"The argument of an ``extend`` or ``include`` (i.e., the extended or included "
"template name) can be a Python variable (though not a Python expression). "
"However, this imposes a limitation – templates that use variables in ``extend`` "
"or ``include`` statements cannot be bytecode compiled. As noted above, bytecode-"
"compiled templates include the entire tree of extended and included templates, "
"so the specific extended and included templates must be known at compile time, "
"which is not possible if the template names are variables (whose values are not "
"determined until run time). Because bytecode compiling templates can provide a "
"significant speed boost, using variables in ``extend`` and ``include`` should "
"generally be avoided if possible."
msgstr ""
"L'argomento di un ''extend'' o ''include'' (cioè il nome del template esteso o "
"incluso) può essere una variabile Python (anche se non un'espressione Python). "
"Tuttavia, questo impone una limitazione: i modelli che usano variabili nelle "
"istruzioni ''extend'' o ''include'' non possono essere compilati con bytecode. "
"Come indicato in precedenza, i modelli compilati con bytecode includono "
"l'intero albero dei modelli estesi e inclusi, quindi i modelli estesi e inclusi "
"specifici devono essere noti in fase di compilazione, il che non è possibile se "
"i nomi dei modelli sono variabili (i cui valori non vengono determinati fino "
"alla fase di esecuzione). Poiché i modelli di compilazione del bytecode possono "
"fornire un significativo aumento di velocità, l'uso di variabili in ''extend'' "
"e ''include'' dovrebbe essere generalmente evitato, se possibile."

#: ../../chapter-09.rst:442
msgid ""
"In some cases, an alternative to using a variable in an ``include`` is simply "
"to place regular ``[[include ...]]`` directives inside an ``if...else`` block."
msgstr ""
"In alcuni casi, un'alternativa all'uso di una variabile in un ''include'' è "
"semplicemente quella di inserire ''[[include ...]] '' direttive all'interno di "
"un ''se... else''."

#: ../../chapter-09.rst:454
msgid ""
"The above code does not present any problem for bytecode compilation because no "
"variables are involved. Note, however, that the bytecode compiled template will "
"actually include the Python code for both “this_template.html” and "
"“that_template.html”, though only the code for one of those templates will be "
"executed, depending on the value of ``some_condition``."
msgstr ""
"Il codice di cui sopra non presenta alcun problema per la compilazione del "
"bytecode perché non sono coinvolte variabili. Si noti, tuttavia, che il modello "
"compilato bytecode includerà effettivamente il codice Python sia per "
"\"this_template.html\" che per \"that_template.html\", anche se verrà eseguito "
"solo il codice per uno di questi modelli, a seconda del valore di "
"''some_condition''."

#: ../../chapter-09.rst:461
msgid ""
"Keep in mind, this only works for ``include`` – you cannot place "
"``[[extend ...]]`` directives inside ``if...else`` blocks."
msgstr ""
"Tenete a mente che questo funziona solo per ''include'' – non potete inserire "
"''[[extend ...]] '' direttive all'interno di ''se... else''."

#: ../../chapter-09.rst:464
msgid ""
"Layouts are used to encapsulate page commonality (headers, footers, menus), and "
"though they are not mandatory, they will make your application easier to write "
"and maintain."
msgstr ""
"I layout vengono utilizzati per incapsulare la comunanza delle pagine "
"(intestazioni, piè di pagina, menu) e, sebbene non siano obbligatori, "
"semplificano la scrittura e la gestione dell'applicazione."

#: ../../chapter-09.rst:469
msgid "Template Functions"
msgstr "Funzioni del modello"

#: ../../chapter-09.rst:471
msgid "Consider this “layout.html”:"
msgstr "Si consideri questo \"layout.html\":"

#: ../../chapter-09.rst:487
msgid "and this extending template"
msgstr "e questo modello di estensione"

#: ../../chapter-09.rst:497
msgid ""
"Notice the function is defined before the ``[[extend...]]`` statement – this "
"results in the function being created before the “layout.html” code is "
"executed, so the function can be called anywhere within “layout.html”, even "
"before the ``[[include]]``. Also notice the function is included in the "
"extended template without the ``=`` prefix."
msgstr ""
"Si noti che la funzione è definita prima di ''[[extend...]] '' - questo fa sì "
"che la funzione venga creata prima che il codice \"layout.html\" venga "
"eseguito, quindi la funzione può essere chiamata ovunque all'interno di "
"\"layout.html\", anche prima di ''[[include]]''. Si noti inoltre che la "
"funzione è inclusa nel modello esteso senza il prefisso ''=''."

#: ../../chapter-09.rst:503
msgid "The code generates the following output:"
msgstr "Il codice genera l'output seguente:"

#: ../../chapter-09.rst:516
msgid ""
"Notice that the function is defined in HTML (although it could also contain "
"Python code) so that ``response.write`` is used to write its content (the "
"function does not return the content). This is why the layout calls the "
"template function using ``[[mysidebar()]]`` rather than ``[[=mysidebar()]]``. "
"Functions defined in this way can take arguments."
msgstr ""
"Si noti che la funzione è definita in HTML (anche se potrebbe contenere anche "
"codice Python) in modo che ''response.write'' sia usato per scrivere il suo "
"contenuto (la funzione non restituisce il contenuto). Questo è il motivo per "
"cui il layout chiama la funzione template usando ''[[mysidebar()]]'' piuttosto "
"che ''[[=mysidebar()]]''. Le funzioni definite in questo modo possono accettare "
"argomenti."

#: ../../chapter-09.rst:523
msgid "``block`` and ``super``"
msgstr "''Blocca'' e ''Super''"

#: ../../chapter-09.rst:525
msgid ""
"The main way to make a template more modular is by using ``[[block ...]]``\\ s "
"and this mechanism is an alternative to the mechanism discussed in the previous "
"section."
msgstr ""
"Il modo principale per rendere un template più modulare è usare ''[[block ...]] "
"''\\ s e questo meccanismo è un'alternativa al meccanismo discusso nella "
"sezione precedente."

#: ../../chapter-09.rst:529
msgid ""
"To understand how this works, consider apps based on the scaffolding app "
"welcome, which has a template layout.html. This template is extended by the "
"template ``default/index.html`` via ``[[extend 'layout.html']]``. The contents "
"of layout.html predefine certain blocks with certain default content, and these "
"are therefore included into default/index.html."
msgstr ""
"Per capire come funziona, prendi in considerazione le app basate sull'app di "
"supporto per l'impalcatura, che ha un modello layout.html. Questo template è "
"esteso dal template ''default/index.html'' tramite ''[[extend 'layout."
"html']]''. Il contenuto di layout.html predefinisce, determinati blocchi con "
"determinati contenuti predefiniti, e questi sono quindi inclusi in default/"
"index.html."

#: ../../chapter-09.rst:535
msgid ""
"You can override these default content blocks by enclosing your new content "
"inside the same block name. The location of the block in the layout.html is not "
"changed, but the contents is."
msgstr ""
"È possibile ignorare questi blocchi di contenuto predefiniti racchiudendo il "
"nuovo contenuto all'interno dello stesso nome di blocco. La posizione del "
"blocco nel layout.html non viene modificata, ma il contenuto sì."

#: ../../chapter-09.rst:539
msgid "Here is a simplified version. Imagine this is “layout.html”:"
msgstr "Ecco una versione semplificata. Immagina che questo sia \"layout.html\":"

#: ../../chapter-09.rst:554
msgid "and this is a simple extending template ``default/index.html``:"
msgstr "E questo è un semplice template di estensione ''default/index.html'':"

#: ../../chapter-09.rst:564
msgid ""
"It generates the following output, where the content is provided by the over-"
"riding block in the extending template, yet the enclosing DIV and class comes "
"from layout.html. This allows consistency across templates:"
msgstr ""
"Genera l'output seguente, in cui il contenuto viene fornito dal blocco di "
"override nel modello di estensione, ma il DIV e la classe che li contengono "
"provengono da layout.html. Ciò consente la coerenza tra i modelli:"

#: ../../chapter-09.rst:579
msgid ""
"The real layout.html defines a number of useful blocks, and you can easily add "
"more to match the layout your desire."
msgstr ""
"Il layout.html reale definisce una serie di blocchi utili e puoi facilmente "
"aggiungerne altri per abbinarli al layout che desideri."

#: ../../chapter-09.rst:582
msgid ""
"You can have many blocks, and if a block is present in the extended template "
"but not in the extending template, the content of the extended template is "
"used. Also, notice that unlike with functions, it is not necessary to define "
"blocks before the ``[[extend ...]]`` – even if defined after the ``extend``, "
"they can be used to make substitutions anywhere in the extended template."
msgstr ""
"È possibile avere molti blocchi e, se un blocco è presente nel modello esteso "
"ma non nel modello esteso, viene utilizzato il contenuto del modello esteso. "
"Inoltre, si noti che, a differenza delle funzioni, non è necessario definire i "
"blocchi prima di ''[[extend ...]] '' – anche se definiti dopo l'''estensione'', "
"possono essere utilizzati per effettuare sostituzioni in qualsiasi punto del "
"modello esteso."

#: ../../chapter-09.rst:589
msgid ""
"Inside a block, you can use the expression ``[[super]]`` to include the content "
"of the parent. For example, if we replace the above extending template with:"
msgstr ""
"All'interno di un blocco, è possibile utilizzare l'espressione ''[[super]]'' "
"per includere il contenuto del genitore. Ad esempio, se sostituiamo il modello "
"di estensione di cui sopra con:"

#: ../../chapter-09.rst:602
msgid "we get:"
msgstr "Otteniamo:"

#: ../../chapter-09.rst:620
msgid "Page layout standard structure"
msgstr "Struttura standard del layout di pagina"

#: ../../chapter-09.rst:624
msgid "Default page layout"
msgstr "Layout predefinito della pagina"

#: ../../chapter-09.rst:626
msgid ""
"The “templates/layout.html” that currently ships with the py4web **_scaffold** "
"application is quite complex but it has the following structure:"
msgstr ""
"Il \"templates/layout.html\" che attualmente viene fornito con l'applicazione "
"py4web **_scaffold** è piuttosto complesso ma ha la seguente struttura:"

#: ../../chapter-09.rst:705
msgid ""
"There are a few features of this default layout that make it very easy to use "
"and customize:"
msgstr ""
"Ci sono alcune caratteristiche di questo layout predefinito che lo rendono "
"molto facile da usare e personalizzare:"

#: ../../chapter-09.rst:708
msgid "it is written in HTML5"
msgstr "è scritto in HTML5"

#: ../../chapter-09.rst:709
msgid ""
"on line 7 it's used the ``no.css`` stylesheet, see `here <https://github.com/"
"mdipierro/no.css/>`__"
msgstr ""
"Alla riga 7 viene usato il foglio di stile ''no.css'', vedi 'qui <https://"
"github.com/mdipierro/no.css/>'__"

#: ../../chapter-09.rst:711
msgid ""
"on line 58 ``[[include]]`` is replaced by the content of the extending template "
"when the page is rendered"
msgstr ""
"Alla riga 58 ''[[include]]'' viene sostituito dal contenuto del template di "
"estensione quando la pagina viene visualizzata"

#: ../../chapter-09.rst:713
msgid "it contains the following blocks: page_head, page_left_menu, page_scripts"
msgstr "Contiene i seguenti blocchi: page_head, page_left_menu page_scripts"

#: ../../chapter-09.rst:714
msgid ""
"on line 30 it checks if the user is logged on and changes the menu accordingly"
msgstr ""
"Alla riga 30 controlla se l'utente è connesso e modifica il menu di conseguenza"

#: ../../chapter-09.rst:715
msgid "on line 54 it checks for flash alert messages"
msgstr "alla riga 54 verifica la presenza di messaggi di avviso lampeggianti"

#: ../../chapter-09.rst:718
msgid ""
"Of course you can also completely replace the “layout.html” and the stylesheet "
"with your own."
msgstr ""
"Naturalmente puoi anche sostituire completamente il \"layout.html\" e il foglio "
"di stile con il tuo."

#: ../../chapter-09.rst:723
msgid "Mobile development"
msgstr "Sviluppo per dispositivi mobili"

#: ../../chapter-09.rst:725
msgid ""
"Although the default layout.html is designed to be mobile-friendly, one may "
"sometimes need to use different templates when a page is visited by a mobile "
"device."
msgstr ""
"Sebbene il layout.html predefinito sia progettato per essere ottimizzato per i "
"dispositivi mobili, a volte potrebbe essere necessario utilizzare modelli "
"diversi quando una pagina viene visitata da un dispositivo mobile."
